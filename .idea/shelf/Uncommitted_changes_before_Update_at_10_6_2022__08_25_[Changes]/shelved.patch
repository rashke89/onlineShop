Index: backend/index.js
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.BaseRevisionTextPatchEP
<+>const express = require('express');\r\nconst mongoose = require('mongoose');\r\nconst cors = require('cors')\r\nconst dbConfig = require('./config/dbConfig');\r\nconst Users = require('./models/userModel');\r\nconst serverConfig = require('./config/serverConfig');\r\n\r\n\r\nconst app = express();\r\nmongoose.connect(dbConfig.MONGODB_URL)\r\n    .then(data => console.log('MONGO DB is connected.'))\r\n    .catch(err => console.log(`Error while connecting to MONGO DB: ${err}`));\r\n\r\napp.use(express.urlencoded({extended: false}));\r\napp.use(express.json());\r\napp.use(cors());\r\n\r\napp.post('/api/login', (req, res) => {\r\n    const reqBody = req.body;\r\n    const foundUser = Users.findOne(reqBody, (err, data) => {\r\n        if (err) {\r\n            const errorMsg = `Error on getting user from DB: ${err}`;\r\n            res.send(errorMsg);\r\n            return;\r\n        }\r\n        res.send(data || false);\r\n    });\r\n})\r\n\r\napp.post('/api/register', async (req, res) => {\r\n    const reqBody = req.body;\r\n    console.log(req)\r\n    Users.findOne({username: reqBody.username}, async (err, data) => {\r\n        console.log(data);\r\n        if (err) {\r\n            const errorMsg = `Error on register user: ${err}`;\r\n            console.log(errorMsg);\r\n            res.send(errorMsg);\r\n            return;\r\n        }\r\n\r\n        if (data)\r\n            res.send(`user already exist: ${data.username}`);\r\n        else {\r\n            const newUser = new Users(reqBody);\r\n            const saveNewUser = await newUser.save();\r\n            console.log(saveNewUser);\r\n\r\n            res.send(saveNewUser || 'User not registered.');\r\n        }\r\n    });\r\n\r\n});\r\n\r\napp.get(\"/\", (req, res) => {\r\n    res.send(\"Welcome to server\");\r\n})\r\n\r\n\r\n//delete user by email\r\napp.delete(\"/api/user/:email\", (req, res) => {\r\n    const params = req.params.email\r\n    Users.deleteOne({email: params}, null, (error) => {\r\n        if (error) throw error\r\n        res.send(\"User deleted\")\r\n    })\r\n})\r\n\r\n//get all users\r\napp.get(\"/api/users\", (req, res) => {\r\n    Users.find((error, result) => {\r\n        if (error) throw error;\r\n        res.send(result)\r\n    })\r\n})\r\n\r\n//get one user by username\r\napp.get(\"/api/user/:username\", (req, res) => {\r\n    const param = req.params.username\r\n    Users.find({\"username\": param}, (error, result) => {\r\n        if (error) throw error;\r\n        res.send(result)\r\n    })\r\n})\r\n\r\n//update user email by username\r\napp.put(\"/api/user/:username\", (req, res) => {\r\n    const param = req.params.username\r\n    const query = req.query\r\n\r\n    Users.updateOne({\"username\": param}, {email: query.email, isAdmin: query.admin}, null, (error, result) => {\r\n        if (error) throw error\r\n        res.send(result)\r\n    })\r\n})\r\n\r\napp.listen(serverConfig.port, err => {\r\n    if (err) {\r\n        console.log(err);\r\n    } else {\r\n        console.log(serverConfig.serverRunningMsg);\r\n        console.log(serverConfig.serverLink);\r\n    }\r\n});\r\n
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/backend/index.js b/backend/index.js
--- a/backend/index.js	(revision 4301eb65580c6a71011651655769a34c1946e79a)
+++ b/backend/index.js	(date 1654674456542)
@@ -30,7 +30,8 @@
 app.post('/api/register', async (req, res) => {
     const reqBody = req.body;
     console.log(req)
-    Users.findOne({username: reqBody.username}, async (err, data) => {
+    const condition = {$or: [{username: reqBody.username}, {password: reqBody.password}]}
+    Users.findOne(condition, async (err, data) => {
         console.log(data);
         if (err) {
             const errorMsg = `Error on register user: ${err}`;
